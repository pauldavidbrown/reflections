1.How did viewing a diff between two versions of a file help you see the bug that was introduced?
It enabled me to pinpoint the lines in the file where differences were found and then focus attention on anomolies


2.How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It enables you to see how much work you have done and also undo any changed which ultimately break your project

3.What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
+ Created at logical times when something is finished

- Its possible to forget to save and lose work

4.Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
When coding it is quite common to change more than one file to acomplish and objective, where as in other scenarios like letters written etc only one file needs to be changed.

5.How can you use the commands git log and git diff to view the history of files?
You can use git log to review the repository history and git diff to see the changes between each commit

6.How might using version control make you more confident to make changes that could break something?
You would be more willing to make big changes as the risk is less of loosing a working solution

7.Now that you have your workspace set up, what do you want to try using Git for?
Tracking anything I develop on my computer, particulalry websites




